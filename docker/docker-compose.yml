version: "3.8"
services:
  catalog-service:
    depends_on:
      - fluent-bit
      - polar-keycloak
      - polar-postgres
      - tempo
    image: "catalog-service"
    container_name: "catalog-service"
    ports:
      - "9001:9001"
      - "8001:8001"
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.32.0.jar
      - OTEL_SERVICE_NAME=catalog-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8001
      - SPRING_DATASOURCE_URL=jdbc:postgresql://polar-postgres:5432/polardb_catalog
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_PROFILES_ACTIVE=testdata
      # - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://host.docker.internal:8080/realms/PolarBookshop
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://polar-keycloak:8080/realms/PolarBookshop
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
  order-service:
    depends_on:
      - polar-keycloak
      - polar-postgres
      - polar-rabbitmq
    image: "order-service"
    container_name: "order-service"
    ports:
      - "9002:9002"
      - "8002:8002"
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.32.0.jar
      - OTEL_SERVICE_NAME=order-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
      #      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8002
      - SPRING_R2DBC_URL=r2dbc:postgresql://polar-postgres:5432/polardb_order
      - SPRING_FLYWAY_URL=jdbc:postgresql://polar-postgres:5432/polardb_order
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - POLAR_CATALOG_SERVICE_URI=http://catalog-service:9001
      - SPRING_RABBITMQ_HOST=polar-rabbitmq
      # - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://host.docker.internal:8080/realms/PolarBookshop
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://polar-keycloak:8080/realms/PolarBookshop
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
  dispatcher-service:
    depends_on:
      - polar-rabbitmq
    image: "dispatcher-service"
    container_name: "dispatcher-service"
    ports:
      - "9003:9003"
      - "8003:8003"
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.32.0.jar
      - OTEL_SERVICE_NAME=dispatcher-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
      #      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8003
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_RABBITMQ_HOST=polar-rabbitmq
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
  config-service:
    image: "config-service"
    container_name: "config-service"
    ports:
      - "8888:8888"
      - "9888:9888"
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.32.0.jar
      - OTEL_SERVICE_NAME=config-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=9888
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
  edge-service:
    depends_on:
      polar-redis:
        condition: service_started
      polar-keycloak:
        condition: service_healthy
      polar-ui:
        condition: service_started
    image: "edge-service"
    container_name: "edge-service"
    ports:
      - "9000:9000"
      - "8000:8000"
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.32.0.jar
      - OTEL_SERVICE_NAME=edge-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8000
      - CATALOG_SERVICE_URL=http://catalog-service:9001
      - ORDER_SERVICE_URL=http://order-service:9002
      - SPA_URL=http://polar-ui:9004
      # - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://host.docker.internal:8080/realms/PolarBookshop
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://polar-keycloak:8080/realms/PolarBookshop  ### work around by adding "127.0.0.1 polar-keycloak" to host /etc/hosts file
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_DATA_REDIS_HOST=polar-redis
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
  polar-postgres:
    image: "postgres:14.4"
    container_name: "polar-postgres"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
  polar-redis:
    image: "redis:7.2.0"
    container_name: "polar-redis"
    ports:
      - "6379:6379"
  polar-rabbitmq:
    image: "rabbitmq:3.12.8-management"
    container_name: "polar-rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
  polar-keycloak:
    image: "quay.io/keycloak/keycloak:22.0.0"
    container_name: "polar-keycloak"
    command: start-dev --import-realm
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 15s
      timeout: 10s
      retries: 15
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    environment:
      - KEYCLOAK_ADMIN=user
      - KEYCLOAK_ADMIN_PASSWORD=password
      - KC_HEALTH_ENABLED=true
    ports:
      - 8080:8080
  polar-ui:
    image: "ghcr.io/polarbookshop/polar-ui:latest"
    container_name: "polar-ui"
    ports:
      - 9004:9004
    environment:
      - PORT=9004
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
  grafana:
    image: grafana/grafana:10.2.2
    container_name: grafana
    depends_on:
      - loki
      - prometheus
      - tempo
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./observability/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./observability/grafana/grafana.ini:/etc/grafana/grafana.ini
  loki:
    image: grafana/loki:2.8.6
    container_name: loki
    depends_on:
      - fluent-bit
    ports:
      - "3100:3100"
  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:2.8.1-amd64
    container_name: fluent-bit
    ports:
      - "24224:24224"
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./observability/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  tempo:
    image: grafana/tempo:2.3.1
    container_name: tempo
    command: -config.file /etc/tempo-config.yml
    ports:
      - "3110:3100"
      - "4317:4317"
    volumes:
      - ./observability/tempo/tempo.yml:/etc/tempo-config.yml